#!/bin/bash

#
# This serves as a container entrypoint for running a MongoDB shard router. See the README for required ENV variables
#

set -o errexit
set -o nounset
set -o pipefail

# shellcheck source=/dev/null
source ${CONTAINER_SCRIPTS_PATH:-}/environment

# shellcheck source=/dev/null
source ${CONTAINER_SCRIPTS_PATH:-}/generate_container_user

# shellcheck source=/dev/null
source ${CONTAINER_SCRIPTS_PATH:-}/db/mongos/init-mongos

unset share_files share_file
trap cleanup SIGINT SIGTERM

log_info "Checking required env variables"
check_mongos_env_vars

log_info "Setting up config file"
if [[ ! -s "$MONGODB_CONFIG_PATH" ]]; then
	envsubst < "${CONTAINER_SCRIPTS_PATH:-}/template/mongos.conf.template" > "$MONGODB_CONFIG_PATH"
fi

log_info "Settings up keys"
setup_keyfile

if [[ "${ENABLE_TLS:-}" == "true" ]]; then
	log_info "TLS enabled"
	if [ ! -n "${SSL_CA_FILE:-}" ]; then
		log_info "A certificate authority (SSL_CA_FILE) was not set. Assuming self-signed"
	else
		ca_opts="--sslCAFile ${SSL_CA_FILE}"
	fi
	setup_certificate
	TLS="--sslMode requireSSL --sslPEMKeyFile ${MONGO_TLS_CERTIFICATE} ${ca_opts:-} ${ADDITIONAL_SSL_OPTS:-}"
fi

$MONGOS --config "$MONGODB_CONFIG_PATH" --keyFile $MONGODB_KEYFILE_PATH ${TLS:-} --configdb "${CONFIG_REPLSET_NAME}/${CONFIG_REPLSET_SERVER}" ${ADDITIONAL_STARTUP_OPTS:-} &

wait_for_mongo_up

log_info "Initializing.."
configure_mongos

wait_for_mongo_up
#Make sure environment variables don't propagate passed initialization
unset_env_vars
log_pass "Ready"
tail_mongodb_log
wait
